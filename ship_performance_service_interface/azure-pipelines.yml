variables:
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

jobs:
- job: testing
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
      Python310:
        python.version: '3.10'

  steps:
    - task: DownloadSecureFile@1
      name: pipSecret # The name with which to reference the secure file's path on the agent, like $(mySecureFile.secureFilePath)
      inputs:
        secureFile: pip.url.secret
        #retryCount: 5 # Optional
    - script: echo $(pipSecret.secureFilePath)
    - script: cp $(pipSecret.secureFilePath) pip.url.secret
    - script: ls -l .

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - task: PipAuthenticate@1
      displayName: 'Pip Authenticate'
      inputs:
        artifactFeeds: 'SintefOceanEnergySystem'
        onlyAddExtraIndex: true

    - script: |
        python -m pip install --upgrade pip
        pip install --find-links=https://pkgs.dev.azure.com/SintefOceanEnergySystem/_packaging/SintefOceanEnergySystem/pypi/simple/ -r requirements.txt
      displayName: 'Install dependencies'

    - script: |
        python -m grpc_tools.protoc -I./protos --python_out=./ship_performance_service_interface_lib --grpc_python_out=./ship_performance_service_interface_lib ./protos/sps_interface.proto
      displayName: 'Generate python code from proto file'



- job: publishing
  dependsOn: testing
  condition: eq(variables.isMaster, true)
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
      Python310:
        python.version: '3.10'

  steps:
    - task: DownloadSecureFile@1
      name: pipSecret # The name with which to reference the secure file's path on the agent, like $(mySecureFile.secureFilePath)
      inputs:
        secureFile: pip.url.secret
        #retryCount: 5 # Optional
    - script: echo $(pipSecret.secureFilePath)
    - script: cp $(pipSecret.secureFilePath) pip.url.secret
    - script: ls -l .

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - task: PipAuthenticate@1
      displayName: 'Pip Authenticate'
      inputs:
        artifactFeeds: 'SintefOceanEnergySystem'
        onlyAddExtraIndex: true

    - script: |
        python -m pip install --upgrade pip
        pip install --find-links=https://pkgs.dev.azure.com/SintefOceanEnergySystem/_packaging/SintefOceanEnergySystem/pypi/simple/ -r requirements.txt
      displayName: 'Install dependencies'

    - script: |
        python -m grpc_tools.protoc -I./protos --python_out=./ship_performance_service_interface_lib --grpc_python_out=./ship_performance_service_interface_lib ./protos/sps_interface.proto
      displayName: 'Generate python code from proto file'

    - script: |
        cd ship_performance_service_interface_lib
        sed -i 's/sps_interface_pb2/ship_performance_service_interface_lib.sps_interface_pb2/g' sps_interface_pb2_grpc.py
      displayName: 'Fix import in generated code'

    - script: |
        pip install wheel
        pip install twine

    - script: |
        python setup.py bdist_wheel

    - task: TwineAuthenticate@1
      displayName: Twine Authentication
      inputs:
        artifactFeed: SintefOceanEnergySystem
        pythonUploadServiceConnection: Python_Packaging_Upload_Service

    - script: |
        python -m twine upload -r SintefOceanEnergySystem --config-file $(PYPIRC_PATH) dist/*.whl
